:host {
	--_transparency-cell-size: var(--transparency-cell-size, .5em);
	--_transparency-background: var(--transparcency-background, transparent);
	--_transparency-darkness: var(--transparency-darkness, 5%);
	--_transparency: var(--transparcency,
		repeating-conic-gradient(transparent 0 25%, rgb(0 0 0 / var(--_transparency-darkness)) 0 50%)
		0 0 / calc(2 * var(--_transparency-cell-size)) calc(2 * var(--_transparency-cell-size))
		content-box border-box var(--_transparency-background)
	);
	display: inline-flex;
	gap: .3em;
	width: min-content;
	margin: .3em;
	white-space: nowrap;
}

:host([size="large"]) {
	flex-flow: column;
}

#gamut {
	font-size: 80%;
}

#wrapper {
	display: flex;
	flex-flow: inherit;
	gap: inherit;

	&.static {
		gap: .4em;
	}

	&:not(:host([size="large"]) *) {
		align-items: baseline;
	}
}

[part="color-wrapper"] {
	position: relative;
	display: flex;
	gap: .2em;

	&:not(.static *) {
		#gamut {
			position: absolute;
			inset: .3em;
			inset-inline-start: auto;
		}
	}

	::slotted(input) {
		padding-inline-end: 2em;
	}
}

::slotted(input) {
	font: inherit;
}

slot[name=swatch] {
	display: flex;
	flex-flow: column;
	flex: 1;
	background: var(--_transparency);
	border-radius: .2rem;

	&:not(:host([size="large"]) *) {
		display: flex;
		inline-size: 2rem;
		font-size: 65%;
	}
}

slot[name=swatch]::slotted(*),
#swatch {
	display: flex;
	flex-flow: column;
	flex: 1;
	padding: .5em;
	background: var(--color);
	border-radius: inherit;

	&:is(:host([size="large"]) *) {
		block-size: 5em;
	}

	&:not(:host([size="large"]) *) {
		flex: 1;
	}
}

:host([swatch="none"]) #swatch {
	display: none;
}