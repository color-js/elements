:host {
	--_transparency-cell-size: var(--transparency-cell-size, .5em);
	--_transparency-background: var(--transparency-background, transparent);
	--_transparency-darkness: var(--transparency-darkness, 5%);
	--_transparency-grid: var(--transparency-grid,
		repeating-conic-gradient(transparent 0 25%, rgb(0 0 0 / var(--_transparency-darkness)) 0 50%)
		0 0 / calc(2 * var(--_transparency-cell-size)) calc(2 * var(--_transparency-cell-size))
		content-box border-box var(--_transparency-background)
	);
	--_positive-deltaE-color: var(--positive-deltaE-color, hsl(120, 80%, 25%));
	--_negative-deltaE-color: var(--negative-deltaE-color, hsl(0, 85%, 40%));

	position: relative;
	display: inline-flex;
	gap: .3em;
	width: fit-content;
	margin: .3em;
	border-radius: .2rem;
}

:host([size="large"]) {
	flex-flow: column;
	inline-size: 11em;
	min-block-size: 6em;
	contain: inline-size;
	container-name: color-swatch;
	container-type: inline-size;
}

slot {
	all: inherit;
	display: contents;
}

#gamut {
	font-size: 80%;

	&:is(:host([size="large"]) *) {
		position: absolute;
		top: 0;
		right: 0;
		margin: .5rem;
	}

	&:not(:host([size="large"]) *):is(.static *) {
		align-self: baseline;
	}

	&[style*="--gamut-level: 0"] {
		display: none;
	}
}

[part="coords"], [part="deltaE"] {
	margin: 0;
	display: inline-flex;
	gap: .5em;

	dd {
		margin: 0;
		font-weight: bold;
		font-variant-numeric: tabular-nums;
	}

	&:is(:host([size="large"]) &) {
		display: grid;
		grid-template-columns: subgrid;
	}
}

[part="coords"] {
	.coord {
		display: flex;
		gap: .2em;

		dd.deltaE {
			color: var(--_deltaE-color);

			&.positive {
				--_deltaE-color: var(--_positive-deltaE-color);
			}

			&.negative {
				--_deltaE-color: var(--_negative-deltaE-color);
			}
		}
	}

	&:is(:host([size="large"]) &) {
		.coord {
			display: contents;

			dd:not(.deltaE, :has(~ dd)) {
				grid-column: span 2;
			}
		}
	}
}

#wrapper {
	display: flex;
	flex-flow: inherit;
	gap: inherit;


	&.static {
		&:is(:host([size="large"]) *) {
			background: white;
		}
	}

	&:not(:host([size="large"]) *) {
		align-items: baseline;
	}

	@container color-swatch (width <= 5rem) {
		font-size: 80%;
	}

	&:is(:host([size="large"]) &) {
		display: grid;
		grid-template-columns: repeat(3, max-content);
		gap: .1em .2em;
		font-size: max(9px, 80%);
		justify-content: start;

		& > * {
			grid-column: 1 / -1;
		}
	}
}

[part="color-wrapper"] {
	display: flex;
	gap: .2em;
}

slot:not([name]) {
	&::slotted(input) {
		display: flex;
		box-sizing: border-box;
		min-width: 10ch;
		font: inherit;
	}

	&:is(:host([size="large"]) *)::slotted(input) {
		width: 100%;
	}
}

[part="color-wrapper"],
slot[name=swatch]::slotted(*),
#swatch {
	border-radius: inherit;
}

slot[name=swatch]::slotted(*),
#swatch {
	flex: 1;
	display: flex;
	flex-flow: column;
	align-items: center;
	justify-content: center;
	padding: .5em;
	display: flex;
	flex-flow: column;
	flex: 1;
	background:
		linear-gradient(var(--color) 0 100%),
		var(--_transparency-grid);

	&:is(:host([size="large"]) *) {
		min-block-size: 3em;
	}

	&:not(:host([size="large"]) *) {
		display: flex;
		min-inline-size: 2em;
		font-size: 65%;
		flex: 1;
	}
}

slot[name=swatch-content] {
	/* See https://lea.verou.me/blog/2024/contrast-color/ */
	--l: clamp(0, (var(--l-threshold, 0.7) / l - 1) * infinity, 1);
	color: oklch(from var(--color) var(--l) 0 h);
}
